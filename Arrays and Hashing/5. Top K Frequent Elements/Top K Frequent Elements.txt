class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        
        unordered_map <int,int> umap1;
        
        for (auto n:nums)
        {
            umap1[n]++;
        }
        
        vector<vector<int>> bucket (nums.size()+1);
            
        for (auto keys:umap1)
        {
            bucket[keys.second].push_back(keys.first);
        }
        
        vector <int> res;
        
        for (int i=bucket.size()-1;i>0 && res.size()<k; i--)
        {
            for (int num:bucket[i])
                res.push_back(num);
                if (res.size()==k)
                    break;
        }
        
        return res;
    }
};